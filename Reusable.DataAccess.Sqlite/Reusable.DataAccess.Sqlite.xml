<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Reusable.DataAccess.Sqlite</name>
    </assembly>
    <members>
        <member name="T:Reusable.DataAccess.Sqlite.SqliteDatabaseCreationHelper">
            <inheritdoc cref="T:Reusable.DataAccess.Common.IDatabaseCreationHelper"/>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteDatabaseCreationHelper.OpenOrCreateDatabase(System.String)">
            <inheritdoc/>
            <param name="databaseFilePath">Das Pfad der Datei, welche die Datenbank enthält.</param>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteDatabaseCreationHelper.CreateTableIfNotExistentAsync``1(System.String,System.Data.IDbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteDatabaseCreationHelper.InsertAsync``1(System.String,System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fügt einer Tabelle neue Reihe hinzu.
            </summary>
            <typeparam name="DataType">Der zu speichernde Datentyp.</typeparam>
            <param name="tableName">Der vorgegebene Name der Tabelle.</param>
            <param name="connection">Die Verbindung mit der Datenbank.</param>
            <param name="objects">Die in die Tabelle hinzufügende Objekte.</param>
            <remarks>Am Ende des Aufrufs sind die Objekte gespeichert.</remarks>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteDatabaseCreationHelper.InsertAsync``1(System.String,System.Data.IDbConnection,System.Data.IDbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fügt einer Tabelle neue Reihe hinzu.
            </summary>
            <typeparam name="DataType">Der zu speichernde Datentyp.</typeparam>
            <param name="tableName">Der vorgegebene Name der Tabelle.</param>
            <param name="connection">Die Verbindung mit der Datenbank.</param>
            <param name="transaction">Die zu verwendende Transaktion.</param>
            <param name="objects">Die in die Tabelle hinzufügende Objekten.</param>
            <remarks>Am Ende des Aufrufs ist die Transaktion immer noch offen, deswegen muss sie geschlossen werden, bevor die zu speichernde Objekte sicherlich zur Verfügung stehen.</remarks>
        </member>
        <member name="T:Reusable.DataAccess.Sqlite.SqliteStatementGenerator">
            <summary>
            Sammelt die Logik zur Erstellung von SQL-Anweisungen.
            Denn diese Implementierung ist vollständig statisch,
            muss sie nur einmal per Datentyp ausgeführt werden.
            </summary>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteStatementGenerator.GenerateStatementsToCreateSchema(System.String,System.Type)">
            <summary>
            Erzeugt SQL-Anweisungen zum Erstellen der Tabelle und ihre Indices.
            </summary>
            <param name="tableName">Der vorgegebene Name der Tabelle.</param>
            <param name="objectType">Der Datentyp, dessen Objekte in der Tabelle gespeichert werden.</param>
            <returns>Die erzeugten SQL-Anweisungen.</returns>
        </member>
        <member name="M:Reusable.DataAccess.Sqlite.SqliteStatementGenerator.GenerateInsertStatement(System.String,System.Type)">
            <summary>
            Erzeugt eine SQL-Anweisung zum Ausfüllen einer Tabelle.
            </summary>
            <param name="tableName">Der vorgegebene Name der Tabelle.</param>
            <param name="objectType">Der Datentyp, dessen Objekte in der Tabelle gespeichert werden.</param>
            <returns>Eine INSERT-Anweisungen, deren Spalten den Properties des Datentyp <paramref name="objectType"/> entsprechen.</returns>
        </member>
    </members>
</doc>
